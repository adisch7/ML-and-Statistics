import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
from scipy import stats
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Assuming df is already defined 

X = df[['field1',
          'field2',
          'field3',
          'field4',
          'field5']]
y = df['field6']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the Linear Regression Model
model = LinearRegression()
model.fit(X_train, y_train)

# Make Predictions
y_pred = model.predict(X_test)

# Evaluate the Model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"R^2 Score: {r2}")

# Display model coefficients
coefficients = pd.DataFrame(model.coef_, X.columns, columns=['Coefficient'])
print(coefficients)

# Plot Actual vs Predicted Prices
plt.figure(figsize=(12, 8))
plt.scatter(y_test, y_pred, edgecolor='k', alpha=0.7)
plt.plot([y.min(), y.max()], [y.min(), y.max()], 'r--', linewidth=2)
plt.xlabel('Actual Light Intensity')
plt.ylabel('Predicted Light Intensity')
plt.title('Actual vs Predicted Influences')
plt.grid(True)

# Add R^2 score to the plot
plt.text(x=min(y_test), y=max(y_pred), s=f'R^2 = {r2:.2f}', fontsize=12, color='red',
         bbox=dict(facecolor='white', alpha=0.5))

plt.show()
